@{
    ViewBag.Title = "My Contacts";
}
<script>
    function ScaleImage(srcwidth, srcheight, targetwidth, targetheight, fLetterBox) {
        var result = { width: 0, height: 0, fScaleToTargetWidth: true };

        if ((srcwidth <= 0) || (srcheight <= 0) || (targetwidth <= 0) || (targetheight <= 0)) {
            return result;
        }

        // scale to the target width
        var scaleX1 = targetwidth;
        var scaleY1 = (srcheight * targetwidth) / srcwidth;

        // scale to the target height
        var scaleX2 = (srcwidth * targetheight) / srcheight;
        var scaleY2 = targetheight;

        // now figure out which one we should use
        var fScaleOnWidth = (scaleX2 > targetwidth);
        if (fScaleOnWidth) {
            fScaleOnWidth = fLetterBox;
        }
        else {
            fScaleOnWidth = !fLetterBox;
        }

        if (fScaleOnWidth) {
            result.width = Math.floor(scaleX1);
            result.height = Math.floor(scaleY1);
            result.fScaleToTargetWidth = true;
        }
        else {
            result.width = Math.floor(scaleX2);
            result.height = Math.floor(scaleY2);
            result.fScaleToTargetWidth = false;
        }
        result.targetleft = Math.floor((targetwidth - result.width) / 2);
        result.targettop = Math.floor((targetheight - result.height) / 2);

        return result;
    }
    function OnImageLoad(evt) {

        var img = evt.currentTarget;

        // what's the size of this image and it's parent
        var w = $(img).width();
        var h = $(img).height();
        var tw = $(img).parent().width();
        var th = $(img).parent().height();

        // compute the new size and offsets
        var result = ScaleImage(w, h, tw, th, false);

        // adjust the image coordinates and size
        img.width = result.width;
        img.height = result.height;
        $(img).css("max-width", result.width);
        $(img).css("max-height", result.height);
        $(img).css("left", result.targetleft);
        $(img).css("top", result.targettop);
    }
</script>
<hgroup>
    <h2>@ViewBag.Title</h2>
    <label for="q" style="display: inline">Filter:</label>
    <input id="q" name="q" type="search" autofocus="true" data-bind="value: filterText, valueUpdate: 'afterkeydown'"  />
</hgroup>

<!--TODO: ensure that the progress bar is briefly animated red onError, before it is hidden -->
<!--TODO: ensure that the progress bar is briefly animated green onComplete, before it is hidden -->
<!--TODO: ensure some sort of error message is displayed onError -->
<div id="progressbar" data-bind="progress: progress, visible: isProcessing"></div>
<div id="ContactGroups" data-bind="template: { name: 'ContactSummaryGroupTemplate', foreach: contactGroups }"></div>

<script type="text/html" id="ContactSummaryGroupTemplate">
    <div class="contact-group" data-bind="visible: isVisible">
        <h3 data-bind="text: header"></h3>
        <div id="ContactSummaries" data-bind="template: { name: 'ContactSummaryTemplate', foreach: contacts }"></div>
    </div>
</script>

<script type="text/html" id="ContactSummaryTemplate">
    <div class="contact-card" data-bind="visible: isVisible">
        <table>
            <tr>
                <td rowspan="2" class="avatar-cell">
                    <img data-bind="attr: { src: primaryAvatar, alt: title }" class="avatar-img" onload="OnImageLoad(event);" />
                </td>
                <td class="title">
                    <h3 data-bind="text: title"></h3>
                </td>
            </tr>
            <tr>
                <td style="background: #808080;">
                    <!-- ko foreach: tags -->
                    <span class="tag" data-bind="text: $data, attr: { title: $data }"></span>
                    <!-- /ko -->
                </td>
            </tr>
        </table>
    </div>
</script>

@section scripts{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jquerycolor")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/signalR")
    @Scripts.Render("~/signalR/hubs")
    @Scripts.Render("~/bundles/pouchdb")
    @Scripts.Render("~/bundles/contacts")
    <script>
        $(function () {
            // $.connection.contacts =  the generated client-side hub proxy
            var model = new callWall.ContactSummariesViewModel();
            model.LoadContactGroups();
            callWall.createCustomProgressbarBindings();
            ko.applyBindings(model);
            // Start the connection
            var adapter = new callWall.SignalR.ContactAdapter($.connection.contactSummaries, model);
            adapter.StartHub();
        });
    </script>
}
@Styles.Render("~/Content/themes/base/css")
